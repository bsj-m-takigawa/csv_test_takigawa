name: CI Pipeline

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # バックエンドの静的解析とテスト
  backend:
    name: Backend (PHP 8.4)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP 8.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, xml, dom, sqlite3, pdo_sqlite, redis
          coverage: none

      - name: Validate composer.json
        working-directory: backend
        run: composer validate --strict

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            backend/vendor
            ~/.composer/cache
          key: ${{ runner.os }}-php84-composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php84-composer-

      - name: Install dependencies
        working-directory: backend
        run: |
          cp -n .env.example .env || true
          composer install --no-interaction --prefer-dist --ansi

      - name: Generate app key
        working-directory: backend
        run: php artisan key:generate --force --ansi

      - name: Check code style (Pint)
        working-directory: backend
        run: ./vendor/bin/pint --test --ansi

      - name: Run tests (PHPUnit)
        working-directory: backend
        run: ./vendor/bin/phpunit --colors=always

  # フロントエンドの静的解析とビルド
  frontend:
    name: Frontend (Node.js 20)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Lint (ESLint)
        working-directory: frontend
        run: npm run lint

      - name: Type check (TypeScript)
        working-directory: frontend
        run: npm run typecheck

      - name: Build
        working-directory: frontend
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: http://localhost:8000/api

  # 全体の成功確認
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: success()
    
    steps:
      - name: CI Pipeline Success
        run: |
          echo "✅ All CI checks passed successfully!"
          echo "Backend: ✓"
          echo "Frontend: ✓"